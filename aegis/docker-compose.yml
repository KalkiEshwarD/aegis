services:
  postgres:
    image: postgres:15
    container_name: aegis_postgres
    environment:
      POSTGRES_DB: aegis
      POSTGRES_USER: ${POSTGRES_USER:-aegis_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-aegis_password}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-aegis_user} -d aegis"]
      interval: 10s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio:latest
    container_name: aegis_minio
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin123}
    ports:
      - "9000:9000"
      - "9001:9001"
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: aegis_backend
    environment:
      DATABASE_URL: ${DATABASE_URL:-postgres://${POSTGRES_USER:-aegis_user}:${POSTGRES_PASSWORD:-aegis_password}@postgres:5432/aegis?sslmode=disable}
      MINIO_ENDPOINT: ${MINIO_ENDPOINT:-minio:9000}
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY:-${MINIO_ROOT_USER:-minioadmin}}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY:-${MINIO_ROOT_PASSWORD:-minioadmin123}}
      MINIO_BUCKET: ${MINIO_BUCKET:-aegis-files}
      JWT_SECRET: ${JWT_SECRET:-aegis_jwt_secret_key_change_in_production}
      PORT: ${PORT:-8080}
      GIN_MODE: ${GIN_MODE:-debug}
    ports:
      - "${PORT:-8080}:${PORT:-8080}"
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
    volumes:
      - ./backend:/app
    restart: unless-stopped
    extra_hosts:
      - "host.docker.internal:host-gateway"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: aegis_frontend
    environment:
      REACT_APP_GRAPHQL_ENDPOINT: http://localhost:8080/graphql
      REACT_APP_API_BASE_URL: http://localhost:8080
    command: npm start
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    restart: unless-stopped

volumes:
  postgres_data:
  minio_data:

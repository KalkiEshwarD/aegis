// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"time"

	"github.com/99designs/gqlgen/graphql"
	"github.com/balkanid/aegis-backend/internal/models"
)

type AddRoomMemberInput struct {
	RoomID string          `json:"room_id"`
	UserID string          `json:"user_id"`
	Role   models.RoomRole `json:"role"`
}

type AdminDashboard struct {
	TotalUsers       int                `json:"total_users"`
	TotalFiles       int                `json:"total_files"`
	TotalStorageUsed int                `json:"total_storage_used"`
	RecentUploads    []*models.UserFile `json:"recent_uploads"`
}

type AuthPayload struct {
	Token string       `json:"token"`
	User  *models.User `json:"user"`
}

type CreateRoomInput struct {
	Name string `json:"name"`
}

type FileFilterInput struct {
	Filename       *string    `json:"filename,omitempty"`
	MimeType       *string    `json:"mime_type,omitempty"`
	MinSize        *int       `json:"min_size,omitempty"`
	MaxSize        *int       `json:"max_size,omitempty"`
	DateFrom       *time.Time `json:"date_from,omitempty"`
	DateTo         *time.Time `json:"date_to,omitempty"`
	IncludeTrashed *bool      `json:"includeTrashed,omitempty"`
}

type LoginInput struct {
	Email    string `json:"email"`
	Password string `json:"password"`
}

type Mutation struct {
}

type Query struct {
}

type RegisterInput struct {
	Email    string `json:"email"`
	Password string `json:"password"`
}

type UploadFileFromMapInput struct {
	Data string `json:"data"`
}

type UploadFileInput struct {
	Filename     string         `json:"filename"`
	ContentHash  string         `json:"content_hash"`
	SizeBytes    int            `json:"size_bytes"`
	MimeType     string         `json:"mime_type"`
	EncryptedKey string         `json:"encrypted_key"`
	FileData     graphql.Upload `json:"file_data"`
}

type UserStats struct {
	TotalFiles     int `json:"total_files"`
	UsedStorage    int `json:"used_storage"`
	StorageQuota   int `json:"storage_quota"`
	StorageSavings int `json:"storage_savings"`
}
